#!/usr/bin/env perl

use strict;
use warnings;

use Env;
use File::Spec;
use File::Path qw(make_path);
use File::Copy;

our $OBERTH_DIRECTORY;
our $HELPER_SCRIPT;

sub setup_devops {
	my $source = File::Spec->catfile($ENV{OBERTH_PROTOTYPE_DIR}, qw(project-renard devops));
	my $target = File::Spec->catfile(qw(.. external project-renard devops));
	if( ! -d $target ) {
		make_path(File::Spec->catfile(qw(.. external project-renard)));
		move($source, $target)
	}

}

sub install {
	print "INSTALL\n";

	my $oberth_cpanfile_log = File::Spec->catfile($OBERTH_DIRECTORY, qw(maint cpanfile-git-log));
	my $repo_cpanfile_log = File::Spec->rel2abs(File::Spec->catfile(qw(maint cpanfile-git-log)));

	if( -d $oberth_cpanfile_log ) {
		make_path(qw(maint));
		move( $oberth_cpanfile_log, $repo_cpanfile_log );
	}

	my $exit = system(qw(perl), $HELPER_SCRIPT, qw(install));

	if( -d $repo_cpanfile_log ) {
		make_path(File::Spec->catfile($OBERTH_DIRECTORY, qw(maint)));
		move( $repo_cpanfile_log, $oberth_cpanfile_log );
	}

	return $exit;
}

sub build {
	print "BUILD\n";

	print "Nothing to build\n";

	return 0;
}

sub test {
	print "TEST\n";

	return system(qw(perl), $HELPER_SCRIPT, qw(test));
}

sub main {
	setup_devops;

	$ENV{COMPILER} = "msys2";
	$ENV{PLATFORM} = "x64";
	$ENV{MSYS2_ARCH} = "x86_64";
	$ENV{MSYS2_DIR} = "msys64";
	$ENV{MSYSTEM} = "MINGW64";
	$ENV{BIT} = 64;

	## running under CI
	$ENV{CI_TESTING} = 1;
	$ENV{DEVOPS_BRANCH} = "master";

	$OBERTH_DIRECTORY = File::Spec->rel2abs('.');

	$HELPER_SCRIPT = File::Spec->rel2abs(
		File::Spec->catfile(
			qw(.. external project-renard devops script helper.pl)
		),
	);

	$ENV{APPVEYOR_BUILD_FOLDER} = $ENV{OBERTH_TEST_DIR};
	chdir $ENV{APPVEYOR_BUILD_FOLDER};

	my %function_lookup = (
		install => \&install,
		build   => \&build,
		test    => \&test,
	);

	if( exists $ARGV[0] && exists $function_lookup{$ARGV[0]} ) {
		exit $function_lookup{$ARGV[0]}->();
	}
}

main;
